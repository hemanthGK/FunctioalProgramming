The 5 SOLID JavaScript (or any language) principles are:

----------------------------------------------------------------------------------------------------------------
S – Single Responsibility Principle
   => Every function you write should do exactly one thing. It should have one clearly defined goal.
   => You’ll be surprised at the number of times you would like your function to do more than “one thing”.
   => You’ll also struggle repeatedly with defining what the “one thing” you want to do is.
----------------------------------------------------------------------------------------------------------------
O – Open-Closed Principle
----------------------------------------------------------------------------------------------------------------
   =>Open-Closed Principle means our JavaScript modules should be open to extension, but closed to modification.
   =>Meaning that if someone wants to extend our module’s behavior, they won’t need to modify existing code if they don’t want to.
----------------------------------------------------------------------------------------------------------------
L – Liskov Substitution Principle
----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------
I – Interface Segregation Principle
----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------
D – Dependency Inversion Principle
----------------------------------------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------

Dry Principle
----------------------------------------------------------------------------------------------------------------
  =>Don't repeat yourself is a principle of software development aimed at reducing repetition of software patterns,
   replacing it with abstractions or using data normalization to avoid redundancy.
----------------------------------------------------------------------------------------------------------------

Functional Programming 